#include<iostream>
using namespace std;
class Node{
    public:
    int data;
    Node* next;
    Node(int d)
    {
        this->data=d;
        this->next=NULL;
    }
    ~Node()
    {
        int val=this->data;
        if(this->next!=NULL)
        {
            delete next;
            next=NULL;
        }
        cout<<"The value which is freed is "<<val<<NULL;
    }
    
};
void InsertAtTail(Node* &tail,int element,int d)
{
    //Empty list..............
    if(tail==NULL)
    {
        Node* newNode=new Node(d);
        tail=newNode;
        newNode->next=newNode;
    }
    else
    {
        //Non empty list ke liye
        // Aussuming that the element is present in the list
        Node* curr=tail;
        while(curr->data!=element)
        {
            curr=curr->next;
        }
        //element found --- curr is represanting element's Node
        Node* temp=new Node(d);
        temp->next=curr->next;
        curr->next=temp;
    }
}
void print(Node* tail)
{
    Node* temp=tail;
    do{
        cout<<tail->data<<" ";
        tail=tail->next;
    } while(tail!=temp);
    cout<<endl;
}

int main()
{
    Node* tail=NULL;
    InsertAtTail(tail,5,3);
    print(tail);
    InsertAtTail(tail,3,5);
    print(tail);
    InsertAtTail(tail,5,7);
    print(tail);
    InsertAtTail(tail,7,8);
    print(tail);
    InsertAtTail(tail,8,9);
    print(tail);
}
